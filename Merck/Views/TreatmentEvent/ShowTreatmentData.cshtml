@using Merck.DTOS;
@model EventResponseDTO

@{
    ViewData["Title"] = "TreatmentEventList";
}
        <div class="table-search-header" style="margin-left:10%">
            <h3 class="heading">Treatment Events Detail for Device Serial No : @ViewBag.SerialNo </h3>
        </div>
        <form class="m-t-30" style="margin-left:10%">
            <table style="text-align:left; width:100%">
                <tr>
                    <td style="width:30%"><label for="myDropdown" class="col-12 p-10">Select Event</label</td>
                    <td style="width:60%">
                        @Html.DropDownList("EventData", new SelectList(ViewBag.EventData, "Event", "Event"), ViewBag.SelectedEvent, new { @class = "form-control, col-6, p-10",@onchange = "onDropdownEventChange(this)", @style="border-radius:10px;" })
                    </td>
                </tr>
                @* @Html.DropDownListFor(
                expression: model => model.SelectedItemId,
                selectList: new SelectList(Model.TreatmentEvents.Select(i => new SelectListItem
                {
                    Value = i.Event,
                    Text = i.Event
                }), "Value", "Text"),
                optionLabel: "Please select a value",
                htmlAttributes: new { @class = "form-control, col-3, p-10",@onchange = "onDropdownEventChange(this)", @style="border-radius:10px" })*@
            
            @if (Model.TreatmentEvents != null)
            {
                <tr>
                    <td style="width:30%"><label for="myDropdown" class="col-12 p-10">Select Event with Timestamp</label></td>
                    <td style="width:60%">
                        @Html.DropDownListFor(
                        expression: model => model.SelectedItemId,
                        selectList: new SelectList(Model.TreatmentEvents.Select(i => new SelectListItem
                        {
                        Value = i.LongTimestamp.ToString(),
                        Text = i.Event + " => " + DateTimeOffset.FromUnixTimeMilliseconds(i.LongTimestamp).UtcDateTime
                        }), "Value", "Text"),
                        optionLabel: "Please select a value",
                        htmlAttributes: new { @class = "form-control, col-3, p-10",@onchange = "onDropdownChange(this)", @style="border-radius:10px" })
                    </td>
                </tr>
            }
            </table>
        </form>
        <script>
            function onDropdownEventChange(dropdown) {
                var selectedText = dropdown.value;
                window.location.href = "/TreatmentEvent/ShowTreatmentData?events=" + selectedText + "&serialNo=" + @ViewBag.SerialNo;
            }
            function onDropdownChange(dropdown) {
                var longTimestamp = dropdown.value;
                var selectedText = dropdown.options[dropdown.selectedIndex].text;
                var timestamp = selectedText.split("=>")[1];
                var event = selectedText.split("=>")[0];
                console.log("Selected value: " + event);
                console.log("Selected text: " + longTimestamp);
                $.ajax({
                    type: "GET",
                    url: "/TreatmentEvent/GetTreatmentEvent?event=" + event + "&timestamp=" + longTimestamp,
                    success: function (data) {
                        console.log(data);
                        var container = document.getElementById("formData");
                        while (container.firstChild) {
                            container.removeChild(container.firstChild);
                        }
                        var jsonObject = JSON.parse(data);
                        var entries = Object.entries(jsonObject);
                        // Loop through the properties of the JSON object
                        var table=document.createElement("table");
                        table.style.textAlign = "left";
                        table.style.width = "100%";
                       for (const [key, value] of entries) {
                            // Create a new form group div
                            var formGroup = document.createElement("tr");
                                                            
                            //formGroup.classList.add("form-group", "row");
                            var labelDiv = document.createElement("td");
                            labelDiv.style.width="30%";
                            // Create a new label element
                            var label = document.createElement("label");
                            label.classList.add("col-12", "p-10", "m-t-10");
                            const modifiedKey = key.replace(/_/g, ' ')
                            .replace(/(?:^|\s)\S/g, function (a) { return a.toUpperCase(); });
                            // Set the label element's text content
                            label.textContent = modifiedKey;
                            labelDiv.appendChild(label);
                            // Add the label element to the form group
                            formGroup.appendChild(labelDiv);
                            var inputDiv = document.createElement("td");
                            inputDiv.style.width = "70%";
                            // Create a new input element
                            var input = document.createElement("input");
                            input.classList.add("col-md-12", "p-10", "m-t-10");
                            input.style.borderRadius = "10px";
                            input.readOnly = true;
                            // Set the input element's attributes
                            input.type = "text";
                            input.name = key;
                            input.value = value;
                            inputDiv.appendChild(input);
                            // Add the input element to the form group
                            formGroup.appendChild(inputDiv);
                            table.appendChild(formGroup)
                            // Add the form group to the container
                            container.appendChild(table);
                        }                       
                    },
                    error: function (xhr, status, error) {
                        // Handle the error
                    }
                });
            }
        </script>
        <form class="m-t-30" style="margin-left:10%">
			<div id="formData">
										        
            </div>
        </form>  