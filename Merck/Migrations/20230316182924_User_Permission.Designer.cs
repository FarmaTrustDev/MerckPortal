// <auto-generated />
using System;
using Merck.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Merck.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230316182924_User_Permission")]
    partial class User_Permission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Merck.Models.PermissionRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("e183cab6-41db-4a13-a7fd-ddd7f61fcbb8"),
                            PermissionId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("883bce5c-38e7-46c5-a7fe-b8e46ed660b3"),
                            PermissionId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            GlobalId = new Guid("5552c350-d419-40b6-82b5-5b4a7d3a9fe8"),
                            PermissionId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            GlobalId = new Guid("828a2137-2549-4342-bbc8-585bde73c9a7"),
                            PermissionId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Merck.Models.Permissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("92326b85-311a-418b-836e-cd28184d41e9"),
                            Name = "View"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("c42212d4-6a4b-46a1-a94d-26575b31e54f"),
                            Name = "Edit"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            GlobalId = new Guid("cefaf8da-7070-44d7-b8db-f813b0d4f468"),
                            Name = "Delete"
                        });
                });

            modelBuilder.Entity("Merck.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("d6421b18-05b6-4a75-8ede-a561eb0690d0"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("9afae10f-827d-41a8-a093-575b519d4826"),
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("Merck.Models.TreatmentEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransmissionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransmissionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TreatmentEvent");
                });

            modelBuilder.Entity("Merck.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Email = "ahmed@gmail.com",
                            FirstName = "Ahmed",
                            Gender = (byte)0,
                            GlobalId = new Guid("73389982-6bd1-4c68-8e3d-d51f4775fa2a"),
                            LastName = "Hassan",
                            Password = "sf/WPJ/YEvZZrFchRMF92A==",
                            UserName = "AhmedHassan"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Email = "paige@loop.com",
                            FirstName = "Paige",
                            Gender = (byte)0,
                            GlobalId = new Guid("477475ff-3b63-4ca1-9e2b-1fa9281844a4"),
                            LastName = "Turner",
                            Password = "sf/WPJ/YEvZZrFchRMF92A==",
                            UserName = "PaigeTurner"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Email = "raja@loop.com",
                            FirstName = "Raja",
                            Gender = (byte)0,
                            GlobalId = new Guid("0af6dc0b-c3b0-4086-a089-a5dc47f6b2cf"),
                            LastName = "Sharif",
                            Password = "sf/WPJ/YEvZZrFchRMF92A==",
                            UserName = "RajaSharif"
                        });
                });

            modelBuilder.Entity("Merck.Models.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("598eb157-ebfc-4b43-b9b2-b9ed758f292d"),
                            RoleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("50cf642e-abc4-4c08-a56b-3c8be683603f"),
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            GlobalId = new Guid("5d311a41-7adb-455e-93dd-b27deb2b4081"),
                            RoleId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            GlobalId = new Guid("a288f08f-8cb9-4d15-a958-bc274459d20b"),
                            RoleId = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Merck.Models.PermissionRoles", b =>
                {
                    b.HasOne("Merck.Models.Permissions", "Permission")
                        .WithMany("PermissionRoles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Merck.Models.Roles", "Role")
                        .WithMany("PermissionRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Merck.Models.UserRoles", b =>
                {
                    b.HasOne("Merck.Models.Roles", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Merck.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Merck.Models.Permissions", b =>
                {
                    b.Navigation("PermissionRoles");
                });

            modelBuilder.Entity("Merck.Models.Roles", b =>
                {
                    b.Navigation("PermissionRoles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Merck.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
