// <auto-generated />
using System;
using Merck.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Merck.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230404180105_Add_Device_Name")]
    partial class Add_Device_Name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Merck.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("Merck.Models.FileLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BlockChainTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<long>("CreatedOn")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerckHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Tempered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileLog");
                });

            modelBuilder.Entity("Merck.Models.PermissionRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("f466f79d-b6dc-459c-aadd-69dc586c7767"),
                            PermissionId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("d5068abb-f3da-4356-8036-e9cd92fc16d4"),
                            PermissionId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            GlobalId = new Guid("04978825-b197-4dde-b9f4-6966f743fb89"),
                            PermissionId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            GlobalId = new Guid("61815456-9062-40d4-ac7f-f95b2a9570d9"),
                            PermissionId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Merck.Models.Permissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("6f3c46d8-8bd7-41e0-9286-a64b301455c6"),
                            Name = "View"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("1d734ead-5c28-488d-9f4d-6d8827bbe42f"),
                            Name = "Edit"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            GlobalId = new Guid("638d59a9-98d0-4b86-8b1d-722e988aa824"),
                            Name = "Delete"
                        });
                });

            modelBuilder.Entity("Merck.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("67ed9391-781c-461f-a95a-75e902672e9e"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("8e43999a-822c-4e78-98d9-0274e5c7c516"),
                            Name = "Patient"
                        });
                });

            modelBuilder.Entity("Merck.Models.TreatmentEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BlockChainTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CartridgeContent")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InjectedDose")
                        .HasColumnType("float");

                    b.Property<long>("LongTimestamp")
                        .HasColumnType("bigint");

                    b.Property<long>("LongTransmissionTime")
                        .HasColumnType("bigint");

                    b.Property<double?>("PrescribedDose")
                        .HasColumnType("float");

                    b.Property<double?>("PrescribedDoseFrequency")
                        .HasColumnType("float");

                    b.Property<string>("RecordType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransmissionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransmissionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.Property<int>("documentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("documentId");

                    b.ToTable("TreatmentEvent");
                });

            modelBuilder.Entity("Merck.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Email = "ahmed@gmail.com",
                            FirstName = "Ahmed",
                            Gender = (byte)0,
                            GlobalId = new Guid("afd3992c-699d-457b-bf34-49a5bdb90529"),
                            LastName = "Hassan",
                            Password = "sf/WPJ/YEvZZrFchRMF92A==",
                            UserName = "AhmedHassan"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Email = "paige@loop.com",
                            FirstName = "Paige",
                            Gender = (byte)0,
                            GlobalId = new Guid("4d9a570c-0ea3-4fd7-9ee1-18e678378191"),
                            LastName = "Turner",
                            Password = "sf/WPJ/YEvZZrFchRMF92A==",
                            UserName = "PaigeTurner"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Email = "raja@loop.com",
                            FirstName = "Raja",
                            Gender = (byte)0,
                            GlobalId = new Guid("065c0259-d247-42e5-8319-583f1eb1a8a0"),
                            LastName = "Sharif",
                            Password = "sf/WPJ/YEvZZrFchRMF92A==",
                            UserName = "RajaSharif"
                        });
                });

            modelBuilder.Entity("Merck.Models.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            GlobalId = new Guid("53d3b57e-227b-49b4-8f90-4573e24ad96a"),
                            RoleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            GlobalId = new Guid("017dee79-261e-495f-8b3e-4b6c48a7e082"),
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            GlobalId = new Guid("963e52f7-7252-4d0d-bb37-ac0469ac50be"),
                            RoleId = 1,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Merck.Models.PermissionRoles", b =>
                {
                    b.HasOne("Merck.Models.Permissions", "Permission")
                        .WithMany("PermissionRoles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Merck.Models.Roles", "Role")
                        .WithMany("PermissionRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Merck.Models.TreatmentEvent", b =>
                {
                    b.HasOne("Merck.Models.Document", "Document")
                        .WithMany("TreatmentEvents")
                        .HasForeignKey("documentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Merck.Models.UserRoles", b =>
                {
                    b.HasOne("Merck.Models.Roles", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Merck.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Merck.Models.Document", b =>
                {
                    b.Navigation("TreatmentEvents");
                });

            modelBuilder.Entity("Merck.Models.Permissions", b =>
                {
                    b.Navigation("PermissionRoles");
                });

            modelBuilder.Entity("Merck.Models.Roles", b =>
                {
                    b.Navigation("PermissionRoles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Merck.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
